DOM Crash Course Part 2 notes
// TRAVERSING THE DOM
-	Parent and child nodes
Example:
      <div id="main" class="card card-body">
    <h2 class="title">Add Items</h2>
    <form class="form-inline mb-3">
-	The h2 has a parent which is the div with the ID of “main”. It’s a child of the div
-	The form is a sibling of the h2 because they are on the same level. Neither one are inside each other.
-	


// EXAMINE THE DOCUMENT OBJECT //



// console.dir(document);
// console.log(document.domain);
// console.log(document.URL);
// console.log(document.title);
// //document.title =  123;
// console.log(document.doctype);
// console.log(document.head);
// console.log(document.body);
// console.log(document.all);
// console.log(document.all[10]);
// // document.all[10].textContent = 'Hello';
// console.log(document.forms[0]);
// console.log(document.links);
// console.log(document.images);

// GETELEMENTBYID //
// console.log(document.getElementById('header-title'));
// var headerTitle = document.getElementById('header-title');
// var header = document.getElementById('main-header');
// console.log(headerTitle);
// headerTitle.textContent = 'Hello';
// headerTitle.innerText = 'Goodbye';
// console.log(headerTitle.innerText);
// headerTitle.innerHTML = '<h3>Hello</h3>';
// header.style.borderBottom = 'solid 3px #000';



- one difference between innerText and textContent is that one of them pays attention to the styling.
   - ie textContent: add a span style of "display:none" to header, it will disappear on the page. but textContent is still showing the "123"
    in the console.
    <h1 id="header-title">Item Lister <span style="display:none">123</span></h1>
   - for innerText: console.log(headerTitle.innerText); and the 123 will dissappear in the console. it pays attention to the styling.
   **for the most part you can use innerText and textContent interchangeably**

- for changing styles:
  - must use camelCase. even if the actual css property is "border-bottom" for example, you have to use camelCase
  


// GETELEMENTSBYCLASSNAME //
// var items = document.getElementsByClassName('list-group-item');
// console.log(items);
// console.log(items[1]);
// items[1].textContent = 'Hello 2';
// items[1].style.fontWeight = 'bold';
// items[1].style.backgroundColor = 'yellow';

 - elementS (plural)
 -

// // Gives error
// //items.style.backgroundColor = '#f4f4f4';

must do this:

// for(var i = 0; i < items.length; i++){
//   items[i].style.backgroundColor = '#f4f4f4';
// }

^^ for loop. create a variable called i = 0. as long as "i" is less than "items.length" (.length is a property, it gets the number of items in that array or collection)
add increment by 1 each time. then in the curly brackets put "items" with currently iteration (which is i), then say .style.backgroundColor = '#f4f4f4';

// GETELEMENTSBYTAGNAME //
// var li = document.getElementsByTagName('li');
// console.log(li);
// console.log(li[1]);
// li[1].textContent = 'Hello 2';
// li[1].style.fontWeight = 'bold';
// li[1].style.backgroundColor = 'yellow';

// // Gives error
// //items.style.backgroundColor = '#f4f4f4';

// for(var i = 0; i < li.length; i++){
//   li[i].style.backgroundColor = '#f4f4f4';
// }

// QUERYSELECTOR //
// var header = document.querySelector('#main-header');
// header.style.borderBottom = 'solid 4px #ccc';

// var input = document.querySelector('input');
// input.value = 'Hello World'

// var submit = document.querySelector('input[type="submit"]');
// submit.value="SEND"

// var item = document.querySelector('.list-group-item');
// item.style.color = 'red';

// var lastItem = document.querySelector('.list-group-item:last-child');
// lastItem.style.color = 'blue';

// var secondItem = document.querySelector('.list-group-item:nth-child(2)');
// secondItem.style.color = 'coral';

// QUERYSELECTORALL //
// var titles = document.querySelectorAll('.title');

// console.log(titles);
// titles[0].textContent = 'Hello';

// var odd = document.querySelectorAll('li:nth-child(odd)');
// var even= document.querySelectorAll('li:nth-child(even)');

 - psuedo selector 

// for(var i = 0; i < odd.length; i++){
//   odd[i].style.backgroundColor = '#f4f4f4';
//   even[i].style.backgroundColor = '#ccc';
// }


// TRAVERSING THE DOM //
var itemList = document.querySelector(‘#items’);
// parentNode property
Console.log(itemList.parentNode);
itemList.parentNode.style.backgroundColor = ‘#f4f4f4’

Console.log(itemList.parentNode.parentNode);
Console.log(itemList.parentNode.parentNode);

// PARENT ELEMENT
Console.log(itemList.parent.Element);
itemList.parentElement.style.backgroundColor = ‘#f4f4f4’;
console.log(itemList.parentElement.parentElement.parent.Element); 

// childNodes
Console.log(itemList.childNodes);
Use the property called “children”
Console.log(itemList.children);
Console.log(itemList.children[1]);

// firstchild property
Console.log(itemList.firstChild);
Console.log(itemList.firstElementChild);
^this will give you the actual first li
itemList.firstElementChild.textContext = ‘Hello 1’
itemList.lastElementChild.textContent = ‘Hello 4’;

// create adiv
var newDiv = document.createElement(‘div’);
console.log(newDiv);

// add class
newDiv.className = ‘hello’; 
// add ID
newDiv.id = ‘hello1’;
// add attribute
newDiv.setAttribute(‘title’, ‘Hello Div’),

// create a text node
var newDivText = document.createTextNode(‘Hello World’)

// add text to div
newDiv.appendChild(‘newDivText’);

var container = document.querySelector(‘header .container’);
var h1 = document.querySelector(‘header  h1’)
console.log(newDiv);
container.insertBefore(newDiv, h1);



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M" crossorigin="anonymous">
  <title>Item Lister</title>
</head>
<body>
  <header id="main-header" class="bg-success text-white p-4 mb-3">
    <div class="container">
      <h1 id="header-title">Item Lister <span style="display:none">123</span></h1>
    </div>
  </header>
  <div class="container">
   <div id="main" class="card card-body">
    <h2 class="title">Add Items</h2>
    <form class="form-inline mb-3">
      <input type="text" class="form-control mr-2">
      <input type="submit" class="btn btn-dark" value="Submit">
    </form>
    <h2 class="title">Items</h2>
    <ul id="items" class="list-group">
      <li class="list-group-item">Item 1</li>
      <li class="list-group-item">Item 2</li>
      <li class="list-group-item">Item 3</li>
      <li class="list-group-item">Item 4</li>
    </ul>
   </div>
  </div>

  <script src="dom.js"></script>
</body>
</html>
